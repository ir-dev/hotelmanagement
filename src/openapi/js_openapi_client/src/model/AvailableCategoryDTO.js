/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The AvailableCategoryDTO model module.
 * @module model/AvailableCategoryDTO
 * @version v0
 */
class AvailableCategoryDTO {
    /**
     * Constructs a new <code>AvailableCategoryDTO</code>.
     * @alias module:model/AvailableCategoryDTO
     * @param name {String} 
     * @param description {String} 
     * @param availableRoomsCount {Number} 
     * @param price {module:model/Price} 
     * @param imageUrl {String} 
     */
    constructor(name, description, availableRoomsCount, price, imageUrl) { 
        
        AvailableCategoryDTO.initialize(this, name, description, availableRoomsCount, price, imageUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, availableRoomsCount, price, imageUrl) { 
        obj['name'] = name;
        obj['description'] = description;
        obj['availableRoomsCount'] = availableRoomsCount;
        obj['price'] = price;
        obj['imageUrl'] = imageUrl;
    }

    /**
     * Constructs a <code>AvailableCategoryDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailableCategoryDTO} obj Optional instance to populate.
     * @return {module:model/AvailableCategoryDTO} The populated <code>AvailableCategoryDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailableCategoryDTO();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('availableRoomsCount')) {
                obj['availableRoomsCount'] = ApiClient.convertToType(data['availableRoomsCount'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = Price.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
AvailableCategoryDTO.prototype['name'] = undefined;

/**
 * @member {String} description
 */
AvailableCategoryDTO.prototype['description'] = undefined;

/**
 * @member {Number} availableRoomsCount
 */
AvailableCategoryDTO.prototype['availableRoomsCount'] = undefined;

/**
 * @member {module:model/Price} price
 */
AvailableCategoryDTO.prototype['price'] = undefined;

/**
 * @member {String} imageUrl
 */
AvailableCategoryDTO.prototype['imageUrl'] = undefined;






export default AvailableCategoryDTO;

