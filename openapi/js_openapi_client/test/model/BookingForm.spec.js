/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenApiDefinition);
  }
}(this, function(expect, OpenApiDefinition) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenApiDefinition.BookingForm();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BookingForm', function() {
    it('should create an instance of BookingForm', function() {
      // uncomment below and update the code to test BookingForm
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be.a(OpenApiDefinition.BookingForm);
    });

    it('should have the property arrivalDate (base name: "arrivalDate")', function() {
      // uncomment below and update the code to test the property arrivalDate
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property departureDate (base name: "departureDate")', function() {
      // uncomment below and update the code to test the property departureDate
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property arrivalTime (base name: "arrivalTime")', function() {
      // uncomment below and update the code to test the property arrivalTime
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property numberOfPersons (base name: "numberOfPersons")', function() {
      // uncomment below and update the code to test the property numberOfPersons
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property selectedCategoriesRoomCount (base name: "selectedCategoriesRoomCount")', function() {
      // uncomment below and update the code to test the property selectedCategoriesRoomCount
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property isOrganization (base name: "isOrganization")', function() {
      // uncomment below and update the code to test the property isOrganization
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property organizationName (base name: "organizationName")', function() {
      // uncomment below and update the code to test the property organizationName
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property discountRate (base name: "discountRate")', function() {
      // uncomment below and update the code to test the property discountRate
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property salutation (base name: "salutation")', function() {
      // uncomment below and update the code to test the property salutation
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property zipcode (base name: "zipcode")', function() {
      // uncomment below and update the code to test the property zipcode
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property specialNotes (base name: "specialNotes")', function() {
      // uncomment below and update the code to test the property specialNotes
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property cardHolderName (base name: "cardHolderName")', function() {
      // uncomment below and update the code to test the property cardHolderName
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property cardNumber (base name: "cardNumber")', function() {
      // uncomment below and update the code to test the property cardNumber
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property cardValidThru (base name: "cardValidThru")', function() {
      // uncomment below and update the code to test the property cardValidThru
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property cardCvc (base name: "cardCvc")', function() {
      // uncomment below and update the code to test the property cardCvc
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "paymentType")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new OpenApiDefinition.BookingForm();
      //expect(instance).to.be();
    });

  });

}));
