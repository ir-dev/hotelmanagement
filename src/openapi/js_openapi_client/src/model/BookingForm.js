/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BookingForm model module.
 * @module model/BookingForm
 * @version v0
 */
class BookingForm {
    /**
     * Constructs a new <code>BookingForm</code>.
     * @alias module:model/BookingForm
     * @param arrivalDate {Date} 
     * @param departureDate {Date} 
     * @param numberOfPersons {Number} 
     * @param selectedCategoriesRoomCount {Object.<String, Number>} 
     * @param salutation {String} 
     * @param firstName {String} 
     * @param lastName {String} 
     * @param dateOfBirth {Date} 
     * @param street {String} 
     * @param zipcode {String} 
     * @param city {String} 
     * @param country {String} 
     * @param cardHolderName {String} 
     * @param cardNumber {String} 
     * @param cardValidThru {String} 
     * @param cardCvc {String} 
     * @param paymentType {String} 
     */
    constructor(arrivalDate, departureDate, numberOfPersons, selectedCategoriesRoomCount, salutation, firstName, lastName, dateOfBirth, street, zipcode, city, country, cardHolderName, cardNumber, cardValidThru, cardCvc, paymentType) { 
        
        BookingForm.initialize(this, arrivalDate, departureDate, numberOfPersons, selectedCategoriesRoomCount, salutation, firstName, lastName, dateOfBirth, street, zipcode, city, country, cardHolderName, cardNumber, cardValidThru, cardCvc, paymentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arrivalDate, departureDate, numberOfPersons, selectedCategoriesRoomCount, salutation, firstName, lastName, dateOfBirth, street, zipcode, city, country, cardHolderName, cardNumber, cardValidThru, cardCvc, paymentType) { 
        obj['arrivalDate'] = arrivalDate;
        obj['departureDate'] = departureDate;
        obj['numberOfPersons'] = numberOfPersons;
        obj['selectedCategoriesRoomCount'] = selectedCategoriesRoomCount;
        obj['salutation'] = salutation;
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
        obj['dateOfBirth'] = dateOfBirth;
        obj['street'] = street;
        obj['zipcode'] = zipcode;
        obj['city'] = city;
        obj['country'] = country;
        obj['cardHolderName'] = cardHolderName;
        obj['cardNumber'] = cardNumber;
        obj['cardValidThru'] = cardValidThru;
        obj['cardCvc'] = cardCvc;
        obj['paymentType'] = paymentType;
    }

    /**
     * Constructs a <code>BookingForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BookingForm} obj Optional instance to populate.
     * @return {module:model/BookingForm} The populated <code>BookingForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BookingForm();

            if (data.hasOwnProperty('arrivalDate')) {
                obj['arrivalDate'] = ApiClient.convertToType(data['arrivalDate'], 'Date');
            }
            if (data.hasOwnProperty('departureDate')) {
                obj['departureDate'] = ApiClient.convertToType(data['departureDate'], 'Date');
            }
            if (data.hasOwnProperty('arrivalTime')) {
                obj['arrivalTime'] = ApiClient.convertToType(data['arrivalTime'], 'String');
            }
            if (data.hasOwnProperty('numberOfPersons')) {
                obj['numberOfPersons'] = ApiClient.convertToType(data['numberOfPersons'], 'Number');
            }
            if (data.hasOwnProperty('selectedCategoriesRoomCount')) {
                obj['selectedCategoriesRoomCount'] = ApiClient.convertToType(data['selectedCategoriesRoomCount'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('isOrganization')) {
                obj['isOrganization'] = ApiClient.convertToType(data['isOrganization'], 'Boolean');
            }
            if (data.hasOwnProperty('organizationName')) {
                obj['organizationName'] = ApiClient.convertToType(data['organizationName'], 'String');
            }
            if (data.hasOwnProperty('discountRate')) {
                obj['discountRate'] = ApiClient.convertToType(data['discountRate'], 'Number');
            }
            if (data.hasOwnProperty('salutation')) {
                obj['salutation'] = ApiClient.convertToType(data['salutation'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('dateOfBirth')) {
                obj['dateOfBirth'] = ApiClient.convertToType(data['dateOfBirth'], 'Date');
            }
            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('zipcode')) {
                obj['zipcode'] = ApiClient.convertToType(data['zipcode'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('specialNotes')) {
                obj['specialNotes'] = ApiClient.convertToType(data['specialNotes'], 'String');
            }
            if (data.hasOwnProperty('cardHolderName')) {
                obj['cardHolderName'] = ApiClient.convertToType(data['cardHolderName'], 'String');
            }
            if (data.hasOwnProperty('cardNumber')) {
                obj['cardNumber'] = ApiClient.convertToType(data['cardNumber'], 'String');
            }
            if (data.hasOwnProperty('cardValidThru')) {
                obj['cardValidThru'] = ApiClient.convertToType(data['cardValidThru'], 'String');
            }
            if (data.hasOwnProperty('cardCvc')) {
                obj['cardCvc'] = ApiClient.convertToType(data['cardCvc'], 'String');
            }
            if (data.hasOwnProperty('paymentType')) {
                obj['paymentType'] = ApiClient.convertToType(data['paymentType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Date} arrivalDate
 */
BookingForm.prototype['arrivalDate'] = undefined;

/**
 * @member {Date} departureDate
 */
BookingForm.prototype['departureDate'] = undefined;

/**
 * @member {String} arrivalTime
 */
BookingForm.prototype['arrivalTime'] = undefined;

/**
 * @member {Number} numberOfPersons
 */
BookingForm.prototype['numberOfPersons'] = undefined;

/**
 * @member {Object.<String, Number>} selectedCategoriesRoomCount
 */
BookingForm.prototype['selectedCategoriesRoomCount'] = undefined;

/**
 * @member {Boolean} isOrganization
 */
BookingForm.prototype['isOrganization'] = undefined;

/**
 * @member {String} organizationName
 */
BookingForm.prototype['organizationName'] = undefined;

/**
 * @member {Number} discountRate
 */
BookingForm.prototype['discountRate'] = undefined;

/**
 * @member {String} salutation
 */
BookingForm.prototype['salutation'] = undefined;

/**
 * @member {String} firstName
 */
BookingForm.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
BookingForm.prototype['lastName'] = undefined;

/**
 * @member {Date} dateOfBirth
 */
BookingForm.prototype['dateOfBirth'] = undefined;

/**
 * @member {String} street
 */
BookingForm.prototype['street'] = undefined;

/**
 * @member {String} zipcode
 */
BookingForm.prototype['zipcode'] = undefined;

/**
 * @member {String} city
 */
BookingForm.prototype['city'] = undefined;

/**
 * @member {String} country
 */
BookingForm.prototype['country'] = undefined;

/**
 * @member {String} specialNotes
 */
BookingForm.prototype['specialNotes'] = undefined;

/**
 * @member {String} cardHolderName
 */
BookingForm.prototype['cardHolderName'] = undefined;

/**
 * @member {String} cardNumber
 */
BookingForm.prototype['cardNumber'] = undefined;

/**
 * @member {String} cardValidThru
 */
BookingForm.prototype['cardValidThru'] = undefined;

/**
 * @member {String} cardCvc
 */
BookingForm.prototype['cardCvc'] = undefined;

/**
 * @member {String} paymentType
 */
BookingForm.prototype['paymentType'] = undefined;






export default BookingForm;

